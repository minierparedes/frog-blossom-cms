// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: websites.sql

package frog_blossom_db

import (
	"context"
	"database/sql"
)

const createWebsites = `-- name: CreateWebsites :one
INSERT INTO websites (
  name,
  domain,
  owner_id,
  password,
  template_id,
  builder_enabled
) VALUES (
  $1, $2, $3, $4, $5, $6
) RETURNING id, name, domain, owner_id, password, template_id, builder_enabled
`

type CreateWebsitesParams struct {
	Name           string         `json:"name"`
	Domain         string         `json:"domain"`
	OwnerID        int64          `json:"owner_id"`
	Password       sql.NullString `json:"password"`
	TemplateID     sql.NullInt64  `json:"template_id"`
	BuilderEnabled sql.NullBool   `json:"builder_enabled"`
}

func (q *Queries) CreateWebsites(ctx context.Context, arg CreateWebsitesParams) (Website, error) {
	row := q.db.QueryRowContext(ctx, createWebsites,
		arg.Name,
		arg.Domain,
		arg.OwnerID,
		arg.Password,
		arg.TemplateID,
		arg.BuilderEnabled,
	)
	var i Website
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Domain,
		&i.OwnerID,
		&i.Password,
		&i.TemplateID,
		&i.BuilderEnabled,
	)
	return i, err
}
